@startuml
title Factory
abstract class Kablo {

- kabloTip: String
- kabloYapi: String
- fiberTip: String
- sagKonnektor: String
- solKonnektor: String
- kabloCapi: String
- kabloMetre: int

+ Kablo(kabloTip:String, kabloYapi:String, fiberTip:String, sagKonnektor:String, solKonnektor:String, kabloCapi:String, kabloMetre:int)
+ getKabloTip(): String
+ setKabloTip(kabloTip: String): void
+ getKabloYapi(): String
+ setKabloYapi(kabloYapi: String): void
+ getFiberTip(): String
+ setFiberTip(fiberTip: String): void
+ getSagKonnektor(): String
+ setSagKonnektor(sagKonnektor: String): void
+ getSolKonnektor(): String
+ setSolKonnektor(solKonnektor: String): void
+ getKabloCapi(): String
+ setKabloCapi(kabloCapi: String): void
+ getKabloMetre(): int
+ setKabloMetre(kabloMetre: int): void
}

abstract class UrunFactory {
urunList : ArrayList<Kablo>
createUrun(kabloTip:String, kabloYapi:String, fiberTip:String, sagKonnektor:String, solKonnektor:String, kabloCapi:String, kabloMetre:int)
getUrunList(): List<Kablo>
setUrunList(urunList: List<Kablo>): void
getUrun(): void
}

class PigTailKablo{
+ PigTailKablo(kabloTip:String, kabloYapi:String, fiberTip:String, sagKonnektor:String, solKonnektor:String, kabloCapi:String, kabloMetre:int)
}

class PatchCordKablo{
+ PatchCordKablo(kabloTip:String, kabloYapi:String, fiberTip:String, sagKonnektor:String, solKonnektor:String, kabloCapi:String, kabloMetre:int)
}

class PTFactory{
+ createUrun(kabloTip:String, kabloYapi:String, fiberTip:String, solKonnektor:String, kabloCapi:String, kabloMetre:int)
}

class PCFactory{
+ createUrun(kabloTip:String, kabloYapi:String, fiberTip:String, sagKonnektor:String, solKonnektor:String, kabloCapi:String, kabloMetre:int)
}

UrunFactory <|-up- PCFactory
UrunFactory <|-up- PTFactory
PigTailKablo ---|> Kablo
PatchCordKablo ---|> Kablo
Kablo <--- PCFactory
Kablo <--- PTFactory

@enduml